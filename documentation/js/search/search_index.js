var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.214,1,1.981]],["body/controllers/AppController.html",[0,1.648,1,2.689,2,1.648,3,0.386,4,0.328,5,3.509,6,0.328,7,0.117,8,0.576,9,1.847,10,4.643,11,1.382,12,0.031,13,4.22,14,1.509,15,0.879,16,2.177,17,0.028,18,0.028]],["title/modules/AppModule.html",[19,1.456,20,1.981]],["body/modules/AppModule.html",[1,2.286,2,1.401,3,0.328,4,0.279,12,0.031,17,0.025,18,0.025,20,3.939,21,1.681,22,2.406,23,2.982,24,2.982,25,2.982,26,3.133,27,3.133,28,3.133,29,3.133,30,2.972,31,2.286,32,2.286,33,3.587,34,2.584,35,3.587]],["title/injectables/AppService.html",[29,1.775,36,1.603]],["body/injectables/AppService.html",[3,0.386,4,0.328,6,0.328,7,0.117,8,0.576,9,1.847,10,4.643,12,0.03,14,1.509,15,0.879,17,0.028,18,0.028,29,2.41,37,2.177,38,3.509,39,3.509,40,2.689,41,4.22,42,2.689,43,4.22]],["title/controllers/CategoriesController.html",[0,1.214,44,1.981]],["body/controllers/CategoriesController.html",[0,0.567,2,0.567,3,0.133,4,0.113,6,0.445,7,0.04,8,0.198,9,0.852,11,1.506,12,0.031,14,1.644,15,0.496,16,0.748,17,0.013,18,0.013,44,0.925,45,1.206,46,1.045,47,1.206,48,2.286,49,1.981,50,2.38,51,2.383,52,2.383,53,2.383,54,2.521,55,3.032,56,1.981,57,2.383,58,1.451,59,2.719,60,3.002,61,4,62,1.811,63,1.514,64,2.528,65,3.171,66,2.806,67,3.171,68,3.171,69,3.171,70,1.451,71,1.716,72,1.731,73,1.627,74,1.195,75,0.71,76,1.627,77,1.206,78,1.953,79,1.451,80,1.045,81,0.925,82,1.045,83,1.451,84,1.731,85,1.206,86,0.925,87,1.451,88,1.144,89,1.045,90,1.206,91,1.206,92,1.206,93,0.925,94,1.428,95,0.925,96,1.045,97,1.451,98,2.184,99,1.981,100,1.981,101,1.206,102,2.184,103,1.981,104,1.206,105,1.731,106,1.981,107,1.451,108,1.451,109,1.564,110,1.206,111,1.206,112,1.451,113,1.451,114,0.828,115,1.451,116,1.206,117,1.451]],["title/classes/CategoriesDTO.html",[7,0.086,59,1.775]],["body/classes/CategoriesDTO.html",[3,0.312,4,0.265,6,0.351,7,0.095,8,0.467,11,1.657,12,0.032,15,0.711,17,0.024,18,0.024,48,2.102,59,1.951,63,1.334,74,1.351,75,0.862,77,2.84,88,0.938,94,1.518,114,2.579,118,1.601,119,2.84,120,1.355,121,2.371,122,3.416,123,3.416,124,3.416,125,3.416,126,4.517,127,2.84,128,3.416,129,3.416,130,2.162,131,3.253]],["title/modules/CategoriesModule.html",[19,1.456,26,1.775]],["body/modules/CategoriesModule.html",[2,1.566,3,0.367,4,0.312,6,0.312,7,0.111,12,0.029,17,0.027,18,0.027,19,1.879,21,1.879,22,2.583,26,3.36,30,3.191,31,2.556,32,2.556,34,2.889,44,2.556,48,1.566,132,3.334,133,3.334,134,3.265,135,4.011]],["title/injectables/CategoriesService.html",[36,1.603,136,2.238]],["body/injectables/CategoriesService.html",[3,0.178,4,0.151,6,0.151,8,0.266,9,1.076,12,0.032,14,1.828,15,0.627,16,1.003,17,0.016,18,0.016,37,1.003,40,1.239,42,1.239,47,1.617,48,2.24,49,2.503,50,3.242,54,3.062,56,2.503,59,3.062,62,1.003,63,1.439,72,2.561,73,1.932,74,1.317,75,0.843,76,1.932,78,2.223,81,1.919,84,2.103,88,1.302,93,1.239,94,1.484,95,1.239,109,1.553,111,1.617,114,1.11,120,0.903,121,0.911,136,1.401,137,1.617,138,1.617,139,2.503,140,3.011,141,3.011,142,3.684,143,3.011,144,3.011,145,1.11,146,1.945,147,2.368,148,2.503,149,1.945,150,1.945,151,3.011,152,1.945,153,2.643,154,1.945,155,1.945,156,1.945,157,2.503,158,1.945,159,1.945,160,1.401,161,1.945,162,1.11,163,1.617,164,1.945]],["title/entities/Category.html",[48,1.214,165,1.214]],["body/entities/Category.html",[3,0.264,4,0.224,6,0.224,7,0.08,8,0.394,11,1.79,12,0.033,15,0.838,17,0.022,18,0.022,42,1.837,48,1.571,63,1.571,75,0.976,86,1.837,88,0.791,94,1.39,114,2.647,120,1.207,121,2.172,130,2.255,165,1.126,166,1.646,167,2.396,168,3.339,169,4.636,170,4.636,171,3.345,172,2.882,173,2.564,174,2.396,175,2.076,176,3.345,177,2.396,178,2.882,179,2.882,180,2.898,181,2.396,182,2.882,183,1.837,184,2.882,185,2.882,186,2.882,187,2.882,188,2.882,189,2.076]],["title/injectables/CategoryRepository.html",[36,1.603,134,1.775]],["body/injectables/CategoryRepository.html",[3,0.316,4,0.268,6,0.268,7,0.126,8,0.472,9,1.626,12,0.031,14,1.626,15,0.947,17,0.024,18,0.024,37,1.781,48,2.194,73,1.776,74,1.356,75,0.775,76,1.776,78,1.618,105,2.597,114,1.972,134,1.972,145,2.597,147,2.597,160,2.487,190,2.871,191,3.453,192,2.871,193,4.549,194,5.087,195,3.453,196,5.087,197,3.453]],["title/classes/HttpExceptionFilter.html",[7,0.086,198,2.238]],["body/classes/HttpExceptionFilter.html",[3,0.352,4,0.299,6,0.299,7,0.107,8,0.525,9,1.743,12,0.03,14,1.374,17,0.026,18,0.026,73,1.501,74,0.964,75,0.655,76,1.501,118,1.801,198,2.768,199,3.195,200,3.195,201,3.195,202,4.451,203,3.844,204,3.844,205,3.844,206,5.354,207,3.844,208,4.875,209,4.875,210,3.844,211,3.195,212,3.844]],["title/classes/NotNullException.html",[7,0.086,213,2.238]],["body/classes/NotNullException.html",[3,0.376,4,0.32,6,0.32,7,0.141,12,0.03,15,1.059,17,0.027,18,0.027,73,1.606,74,1.032,75,0.701,76,1.606,118,1.927,127,3.419,145,2.904,192,3.419,202,3.419,211,3.419,213,2.962,214,3.419,215,3.419,216,4.113,217,4.113,218,4.113]],["title/entities/Products.html",[121,1.456,165,1.214]],["body/entities/Products.html",[3,0.247,4,0.21,6,0.379,7,0.075,8,0.369,11,1.844,12,0.033,15,0.8,17,0.021,18,0.021,48,2.012,63,1.501,74,0.678,75,0.977,86,1.722,88,1.228,94,1.342,120,1.153,121,1.266,130,2.448,165,1.055,166,1.543,168,3.223,171,2.246,173,1.722,174,2.246,175,2.769,176,2.246,177,2.246,180,2.769,181,2.246,183,1.722,189,1.946,219,2.246,220,3.72,221,2.769,222,3.72,223,3.72,224,2.702,225,2.702,226,2.246,227,1.946,228,2.246,229,2.702,230,2.702]],["title/controllers/ProductsController.html",[0,1.214,231,1.981]],["body/controllers/ProductsController.html",[0,0.66,2,0.66,3,0.155,4,0.131,6,0.437,7,0.047,8,0.231,9,0.964,11,1.464,12,0.031,14,1.598,15,0.561,16,0.872,17,0.014,18,0.014,46,1.217,50,2.939,60,3.021,61,4.012,62,1.391,63,2.15,64,2.423,65,3.22,66,2.849,67,3.22,68,3.22,69,3.22,71,1.217,72,0.965,73,1.638,74,1.177,75,0.715,76,1.638,78,1.576,80,1.217,81,1.077,82,1.217,84,2.192,88,1.227,89,1.217,90,1.405,91,1.405,92,1.405,93,1.077,94,1.506,95,1.077,96,1.217,98,2.423,99,2.241,100,2.796,101,2.241,102,1.942,103,1.405,104,1.405,105,0.965,106,3.487,109,0.872,116,1.405,121,1.576,153,1.077,162,0.965,221,1.217,231,1.077,232,1.405,233,2.241,234,3.364,235,2.241,236,2.696,237,2.696,238,2.241,239,1.405,240,2.679,241,1.69,242,1.405,243,1.69,244,1.69,245,1.69,246,1.405,247,1.405]],["title/classes/ProductsDTO.html",[7,0.086,240,1.775]],["body/classes/ProductsDTO.html",[3,0.289,4,0.246,6,0.406,7,0.088,8,0.432,11,1.842,12,0.033,15,0.894,17,0.023,18,0.023,63,1.236,74,0.794,75,0.959,88,1.178,118,1.483,120,1.287,130,2.404,131,4.052,168,3.507,180,3.091,220,4.048,221,3.091,222,4.048,223,4.048,240,1.807,248,2.631,249,3.165]],["title/modules/ProductsModule.html",[19,1.456,27,1.775]],["body/modules/ProductsModule.html",[2,1.763,3,0.413,4,0.351,6,0.351,7,0.125,12,0.029,17,0.029,18,0.029,19,2.116,21,2.116,27,2.578,63,1.763,231,2.878,250,4.516]],["title/injectables/ProductsService.html",[36,1.603,251,2.238]],["body/injectables/ProductsService.html",[3,0.205,4,0.174,6,0.174,7,0.062,8,0.306,9,1.199,12,0.032,14,1.793,15,0.699,16,1.156,17,0.018,18,0.018,37,1.156,40,1.429,42,1.429,50,3.178,62,1.156,63,2.259,71,1.615,72,1.916,73,1.958,74,1.341,75,0.855,76,1.958,78,1.572,84,2.548,85,1.864,86,1.429,88,1.376,89,1.615,93,1.429,94,1.559,109,1.731,120,1.006,138,1.864,139,2.789,145,1.916,147,1.916,148,1.864,153,1.429,157,2.789,160,1.615,162,1.28,163,1.864,233,2.789,235,2.789,238,2.789,239,1.864,240,2.968,242,1.864,246,1.864,247,1.864,251,1.615,252,1.864,253,4.02,254,3.355,255,3.355,256,2.242,257,2.242,258,2.242,259,2.242]],["title/entities/Profile.html",[165,1.214,260,1.456]],["body/entities/Profile.html",[3,0.303,4,0.257,6,0.257,7,0.092,8,0.452,11,1.741,12,0.033,15,0.921,17,0.024,18,0.024,74,1.11,75,0.906,88,0.909,94,1.494,120,1.327,130,2.129,165,1.293,166,1.891,173,2.11,183,2.11,189,2.385,227,3.186,228,2.753,260,2.073,261,2.753,262,4.142,263,4.142,264,2.596,265,3.311,266,3.311,267,2.753,268,3.311,269,4.424]],["title/entities/User.html",[165,1.214,264,1.456]],["body/entities/User.html",[3,0.271,4,0.23,6,0.23,7,0.082,8,0.404,11,1.745,12,0.033,15,0.979,17,0.022,18,0.022,74,1.337,75,0.909,88,0.813,94,1.523,120,1.23,130,2.277,165,1.157,166,1.691,173,2.997,175,2.953,183,1.887,226,3.409,227,3.388,260,2.379,264,1.921,267,2.462,270,2.462,271,3.409,272,3.409,273,3.409,274,2.962,275,2.962,276,2.962,277,2.962,278,2.962,279,2.962,280,2.962,281,2.962,282,2.962,283,2.962,284,2.962,285,2.962,286,2.962]],["title/controllers/UserController.html",[0,1.214,287,1.981]],["body/controllers/UserController.html",[0,0.806,2,0.806,3,0.189,4,0.16,6,0.447,7,0.057,8,0.282,9,1.126,11,1.509,12,0.031,14,1.647,16,1.971,17,0.017,18,0.017,46,1.486,60,3.081,61,4.096,62,1.064,64,3.319,65,3.319,66,2.936,67,3.319,68,3.319,69,3.319,73,1.23,74,0.79,75,0.537,76,1.23,78,2.159,80,1.486,81,1.314,82,1.486,88,0.865,94,0.619,95,1.314,96,1.486,98,2.269,102,2.753,105,1.799,109,1.625,110,1.715,162,1.178,260,2.553,264,2.74,287,1.314,288,1.715,289,2.063,290,3.822,291,3.822,292,3.177,293,2.619,294,2.619,295,2.063,296,2.063,297,1.715,298,2.443,299,1.715,300,1.715,301,2.063,302,1.715]],["title/classes/UserDTO.html",[7,0.086,298,1.775]],["body/classes/UserDTO.html",[3,0.323,4,0.274,6,0.274,7,0.098,8,0.482,11,1.785,12,0.033,15,1.07,17,0.025,18,0.025,75,0.929,118,1.653,120,1.384,130,2.329,131,3.927,260,2.555,271,4.274,272,4.274,273,4.274,298,2.634,303,2.933]],["title/modules/UserModule.html",[19,1.456,28,1.775]],["body/modules/UserModule.html",[2,1.576,3,0.369,4,0.314,6,0.314,12,0.029,17,0.027,18,0.027,19,1.891,21,1.891,22,2.593,28,3.366,30,3.203,31,2.572,32,2.572,34,2.907,264,1.891,287,2.572,304,3.355,305,3.355,306,3.272,307,4.036]],["title/injectables/UserService.html",[36,1.603,306,1.775]],["body/injectables/UserService.html",[3,0.241,4,0.205,6,0.205,7,0.073,8,0.36,9,1.35,12,0.031,14,1.824,17,0.02,18,0.02,37,1.359,40,1.679,50,3.3,62,1.359,73,1.724,74,1.107,75,0.752,76,1.724,78,2.259,84,1.505,88,1.037,94,0.79,105,1.505,109,2.277,145,1.505,147,2.753,153,3.072,162,1.505,260,2.259,264,2.769,292,3.67,293,3.14,294,3.14,297,2.191,298,2.753,299,2.191,300,2.191,302,2.191,306,1.505,308,2.191,309,4.414,310,4.414,311,2.635,312,3.777,313,2.635,314,2.635,315,2.635,316,2.635]],["title/coverage.html",[317,3.053]],["body/coverage.html",[0,1.818,1,1.558,4,0.19,5,2.033,7,0.144,12,0.033,17,0.019,18,0.019,29,1.396,36,2.556,38,2.033,44,1.558,45,2.033,48,0.955,59,1.396,72,1.396,75,0.417,119,2.033,121,1.146,134,1.396,136,1.761,137,2.033,165,1.818,167,2.033,190,2.033,198,1.761,199,2.033,200,2.033,201,2.033,213,1.761,214,2.033,215,2.033,219,2.033,231,1.558,232,2.033,240,1.396,248,2.033,251,1.761,252,2.033,260,1.146,261,2.033,264,1.146,270,2.033,287,1.558,288,2.033,298,1.396,303,2.033,306,1.396,308,2.033,317,1.761,318,2.446,319,2.446,320,2.446,321,6.049,322,4.656,323,2.446,324,2.446,325,2.446,326,4.954,327,3.578,328,2.033,329,2.033,330,2.033,331,3.578,332,2.446,333,2.446,334,3.578,335,2.033,336,1.761,337,2.446,338,2.446,339,2.446,340,2.446,341,2.446]],["title/dependencies.html",[22,1.928,342,2.159]],["body/dependencies.html",[7,0.126,12,0.034,17,0.024,18,0.024,22,1.781,343,3.453,344,3.453,345,3.453,346,3.453,347,3.453,348,4.549,349,3.453,350,4.549,351,3.453,352,3.453,353,3.453,354,3.453,355,3.453,356,3.453,357,3.453,358,3.453,359,3.453,360,3.453,361,2.871,362,3.453,363,3.453,364,3.453,365,3.453,366,3.453,367,3.453,368,3.453,369,3.453,370,3.453,371,3.453,372,3.453,373,3.453,374,3.453,375,3.453,376,3.453]],["title/miscellaneous/functions.html",[377,2.159,378,3.107]],["body/miscellaneous/functions.html",[8,0.621,12,0.029,17,0.029,18,0.029,328,3.78,329,3.78,330,4.795,377,3.78,378,3.78,379,4.548,380,4.548]],["title/index.html",[8,0.355,381,2.597,382,2.597]],["body/index.html",[6,0.224,12,0.033,17,0.022,18,0.022,39,2.396,66,1.837,147,1.646,317,2.076,361,4.665,383,2.882,384,2.882,385,4.024,386,2.882,387,2.882,388,2.882,389,2.882,390,2.882,391,4.636,392,2.882,393,2.882,394,2.882,395,2.882,396,2.882,397,5.468,398,2.882,399,2.882,400,4.024,401,2.882,402,2.882,403,2.882,404,2.882,405,4.024,406,4.024,407,2.882,408,2.882,409,2.882,410,4.024,411,4.024,412,2.882,413,2.882,414,2.882,415,2.882,416,2.882,417,2.882,418,2.396,419,2.882,420,2.882,421,2.882,422,2.882,423,2.882,424,2.882,425,2.882,426,2.882,427,2.882,428,2.882,429,2.396,430,2.882,431,2.882,432,2.882,433,2.882,434,2.882,435,2.882,436,2.396]],["title/modules.html",[21,1.986]],["body/modules.html",[12,0.028,17,0.028,18,0.028,20,2.707,21,1.991,26,2.426,27,2.426,28,2.426,418,4.657,437,5.602,438,5.602,439,5.834,440,4.248,441,4.248]],["title/overview.html",[442,3.524]],["body/overview.html",[2,1.3,12,0.032,17,0.024,18,0.024,20,3.859,21,1.56,22,2.29,23,2.767,24,2.767,25,2.767,26,3.169,27,2.852,28,3.169,29,2.852,30,2.829,31,2.121,32,2.121,37,1.717,118,1.56,132,2.767,133,2.767,134,2.852,166,1.9,304,2.767,305,2.767,306,2.852,442,2.767,443,4.995,444,3.328,445,3.328]],["title/classes/profileDTO.html",[7,0.086,336,2.238]],["body/classes/profileDTO.html",[3,0.345,4,0.293,6,0.435,7,0.105,8,0.516,12,0.032,15,1.004,17,0.026,18,0.026,75,0.953,88,1.037,94,1.592,118,1.769,120,1.446,130,2.39,262,4.414,263,4.414,335,3.139,336,3.472,446,3.776]],["title/properties.html",[120,1.121,342,2.159]],["body/properties.html",[6,0.351,12,0.033,17,0.029,18,0.029,120,1.354,429,3.754,436,3.754,447,4.516,448,4.516,449,4.516]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/profileDTO.html":{},"properties.html":{}}}],["0.0.1",{"_index":448,"title":{},"body":{"properties.html":{}}}],["0.1.0",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":367,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":184,"title":{},"body":{"entities/Category.html":{}}}],["1/1",{"_index":326,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":177,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{}}}],["100",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":129,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["2/2",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":126,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["3.0.2",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":443,"title":{},"body":{"overview.html":{}}}],["4.5.0",{"_index":374,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":327,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":444,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":445,"title":{},"body":{"overview.html":{}}}],["6.1.0",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":337,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":339,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["8.19.0",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":324,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["9.0.11",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["9/11",{"_index":325,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":186,"title":{},"body":{"entities/Category.html":{}}}],["add",{"_index":151,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["addcategory",{"_index":140,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["addcategory(categoriesdto",{"_index":150,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["addcategorywithproducts",{"_index":49,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["addcategorywithproducts(categoriesdto",{"_index":152,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["addcategorywithproducts(categorydto",{"_index":58,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["added",{"_index":81,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["addproducts",{"_index":233,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["addproducts(productsdto",{"_index":239,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["affected",{"_index":95,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["again",{"_index":69,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["allproducts",{"_index":234,"title":{},"body":{"controllers/ProductsController.html":{}}}],["along",{"_index":159,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["amazing",{"_index":419,"title":{},"body":{"index.html":{}}}],["apicreatedresponse({status",{"_index":80,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["apiokresponse({status",{"_index":60,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":131,"title":{},"body":{"classes/CategoriesDTO.html":{},"classes/ProductsDTO.html":{},"classes/UserDTO.html":{}}}],["apiproperty({description",{"_index":122,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["app",{"_index":39,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":390,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":20,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":29,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":209,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":50,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{}}}],["author",{"_index":429,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":441,"title":{},"body":{"modules.html":{}}}],["backers",{"_index":420,"title":{},"body":{"index.html":{}}}],["based",{"_index":106,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["between",{"_index":128,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["block",{"_index":210,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["bootsrap",{"_index":380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":439,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":437,"title":{},"body":{"modules.html":{}}}],["building",{"_index":386,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":226,"title":{},"body":{"entities/Products.html":{},"entities/User.html":{}}}],["cascade'})@joincolumn",{"_index":284,"title":{},"body":{"entities/User.html":{}}}],["catch",{"_index":206,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":207,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":47,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["categoriescontroller",{"_index":44,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesdto",{"_index":59,"title":{"classes/CategoriesDTO.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":26,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":136,"title":{"injectables/CategoriesService.html":{}},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["category",{"_index":48,"title":{"entities/Category.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"entities/Products.html":{},"coverage.html":{}}}],["category.products",{"_index":225,"title":{},"body":{"entities/Products.html":{}}}],["category_name",{"_index":172,"title":{},"body":{"entities/Category.html":{}}}],["categorydto",{"_index":77,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{}}}],["categoryname",{"_index":114,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{}}}],["categoryrepo",{"_index":149,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryrepository",{"_index":134,"title":{"injectables/CategoryRepository.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoryRepository.html":{},"coverage.html":{},"overview.html":{}}}],["cayegory",{"_index":117,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["class",{"_index":7,"title":{"classes/CategoriesDTO.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"classes/ProductsDTO.html":{},"classes/UserDTO.html":{},"classes/profileDTO.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"classes/profileDTO.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/CategoriesDTO.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"classes/ProductsDTO.html":{},"classes/UserDTO.html":{},"overview.html":{},"classes/profileDTO.html":{}}}],["cluster_appmodule",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":132,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":133,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":304,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":305,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["column",{"_index":130,"title":{},"body":{"classes/CategoriesDTO.html":{},"entities/Category.html":{},"entities/Products.html":{},"classes/ProductsDTO.html":{},"entities/Profile.html":{},"entities/User.html":{},"classes/UserDTO.html":{},"classes/profileDTO.html":{}}}],["column({name",{"_index":171,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{}}}],["column({type",{"_index":227,"title":{},"body":{"entities/Products.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["common",{"_index":216,"title":{},"body":{"classes/NotNullException.html":{}}}],["constructor",{"_index":145,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"classes/NotNullException.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{}}}],["constructor(categoryrepo",{"_index":146,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(datasource",{"_index":195,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["constructor(message",{"_index":218,"title":{},"body":{"classes/NotNullException.html":{}}}],["constructor(productrepo",{"_index":256,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(userrepo",{"_index":311,"title":{},"body":{"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":317,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":71,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createcategories",{"_index":51,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["createcategories(categoriesdto",{"_index":79,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["created",{"_index":86,"title":{},"body":{"controllers/CategoriesController.html":{},"entities/Category.html":{},"entities/Products.html":{},"injectables/ProductsService.html":{}}}],["createdatecolumn",{"_index":181,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{}}}],["createdon",{"_index":168,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"classes/ProductsDTO.html":{}}}],["custom",{"_index":191,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["data",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{}}}],["database",{"_index":138,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["datasource",{"_index":196,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["date",{"_index":180,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"classes/ProductsDTO.html":{}}}],["db",{"_index":157,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"entities/Category.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["default",{"_index":42,"title":{},"body":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/ProductsService.html":{}}}],["delete",{"_index":93,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deletecategories",{"_index":52,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletecategories(id",{"_index":87,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletecategory",{"_index":141,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletecategory(id",{"_index":154,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deleted",{"_index":89,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deletedatecolumn",{"_index":182,"title":{},"body":{"entities/Category.html":{}}}],["deletedon",{"_index":169,"title":{},"body":{"entities/Category.html":{}}}],["deleteproduct",{"_index":235,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":242,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dependencies",{"_index":22,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"classes/profileDTO.html":{},"properties.html":{}}}],["detail",{"_index":315,"title":{},"body":{"injectables/UserService.html":{}}}],["details",{"_index":105,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoryRepository.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["development",{"_index":396,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":407,"title":{},"body":{"index.html":{}}}],["eager",{"_index":281,"title":{},"body":{"entities/User.html":{}}}],["efficient",{"_index":387,"title":{},"body":{"index.html":{}}}],["email",{"_index":275,"title":{},"body":{"entities/User.html":{}}}],["email_id",{"_index":274,"title":{},"body":{"entities/User.html":{}}}],["emailid",{"_index":271,"title":{},"body":{"entities/User.html":{},"classes/UserDTO.html":{}}}],["entities",{"_index":166,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"entities/Profile.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":165,"title":{"entities/Category.html":{},"entities/Products.html":{},"entities/Profile.html":{},"entities/User.html":{}},"body":{"entities/Category.html":{},"entities/Products.html":{},"entities/Profile.html":{},"entities/User.html":{},"coverage.html":{}}}],["error",{"_index":67,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["exception",{"_index":211,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{}}}],["exceptionfilter",{"_index":205,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptions",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["existing",{"_index":302,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["express",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":192,"title":{},"body":{"injectables/CategoryRepository.html":{},"classes/NotNullException.html":{}}}],["false",{"_index":179,"title":{},"body":{"entities/Category.html":{}}}],["fetch",{"_index":109,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fetchallcategories",{"_index":142,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["fetchallproducts",{"_index":253,"title":{},"body":{"injectables/ProductsService.html":{}}}],["fetchalluser",{"_index":290,"title":{},"body":{"controllers/UserController.html":{}}}],["fetched",{"_index":98,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["fetchuserwithprofile",{"_index":291,"title":{},"body":{"controllers/UserController.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/profileDTO.html":{}}}],["filter",{"_index":203,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["filter.filter.ts",{"_index":201,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["filter/exception",{"_index":200,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["findcategoriesbyname",{"_index":193,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["findcategoriesbyname(categoryname",{"_index":197,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["first",{"_index":277,"title":{},"body":{"entities/User.html":{}}}],["first_name",{"_index":276,"title":{},"body":{"entities/User.html":{}}}],["firstname",{"_index":272,"title":{},"body":{"entities/User.html":{},"classes/UserDTO.html":{}}}],["found",{"_index":103,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["found'})@apiinternalservererrorresponse({status",{"_index":91,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["found'})@get",{"_index":110,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/UserController.html":{}}}],["found'})@get('/all",{"_index":296,"title":{},"body":{"controllers/UserController.html":{}}}],["found'})@get('/profiles",{"_index":295,"title":{},"body":{"controllers/UserController.html":{}}}],["found'})@usefilters(httpexceptionfilter)@get",{"_index":241,"title":{},"body":{"controllers/ProductsController.html":{}}}],["framework",{"_index":385,"title":{},"body":{"index.html":{}}}],["function",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":378,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('by",{"_index":112,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["getallprofiles",{"_index":292,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getalluser",{"_index":309,"title":{},"body":{"injectables/UserService.html":{}}}],["getbycategoriesid",{"_index":53,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["getbycategoriesid(id",{"_index":97,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["getbycategoryid",{"_index":143,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getbycategoryid(id",{"_index":158,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getbyproductid",{"_index":254,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getbyproductid(id",{"_index":257,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getbyproductsname",{"_index":236,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getbyproductsname(productname",{"_index":243,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getcategorydetail",{"_index":194,"title":{},"body":{"injectables/CategoryRepository.html":{}}}],["getcategorywithproducts",{"_index":54,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["gethello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductbyid",{"_index":237,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(id",{"_index":245,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductname",{"_index":255,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getproductname(name",{"_index":258,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":381,"title":{"index.html":{}},"body":{}}],["getuserwithprofile",{"_index":310,"title":{},"body":{"injectables/UserService.html":{}}}],["given",{"_index":100,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["graph",{"_index":440,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":415,"title":{},"body":{"index.html":{}}}],["here",{"_index":426,"title":{},"body":{"index.html":{}}}],["host",{"_index":208,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":202,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{}}}],["httpexceptionfilter",{"_index":198,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":433,"title":{},"body":{"index.html":{}}}],["id",{"_index":94,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/profileDTO.html":{}}}],["id'})@apiinternalservererrorresponse({status",{"_index":101,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["id'})@get(':id",{"_index":104,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["identifier",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["image_content",{"_index":265,"title":{},"body":{"entities/Profile.html":{}}}],["image_name",{"_index":266,"title":{},"body":{"entities/Profile.html":{}}}],["imagecontent",{"_index":262,"title":{},"body":{"entities/Profile.html":{},"classes/profileDTO.html":{}}}],["imagename",{"_index":263,"title":{},"body":{"entities/Profile.html":{},"classes/profileDTO.html":{}}}],["implements",{"_index":204,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["imports",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"classes/profileDTO.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/profileDTO.html":{}}}],["injectable",{"_index":36,"title":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":37,"title":{},"body":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":394,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":395,"title":{},"body":{"index.html":{}}}],["internal",{"_index":65,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["isactive",{"_index":170,"title":{},"body":{"entities/Category.html":{}}}],["join",{"_index":422,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":430,"title":{},"body":{"index.html":{}}}],["last",{"_index":279,"title":{},"body":{"entities/User.html":{}}}],["last_name",{"_index":278,"title":{},"body":{"entities/User.html":{}}}],["lastname",{"_index":273,"title":{},"body":{"entities/User.html":{},"classes/UserDTO.html":{}}}],["later'})@apinotfoundresponse({status",{"_index":102,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["later'})@delete(':id",{"_index":92,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["later'})@get('/details/:productname",{"_index":244,"title":{},"body":{"controllers/ProductsController.html":{}}}],["later'})@patch(':id",{"_index":301,"title":{},"body":{"controllers/UserController.html":{}}}],["later'})@post",{"_index":82,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["later'})@post('/products",{"_index":70,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["later'})@put(':id",{"_index":116,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["length",{"_index":176,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{}}}],["license",{"_index":436,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":411,"title":{},"body":{"index.html":{}}}],["list",{"_index":78,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["listcategories",{"_index":55,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["logger",{"_index":139,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["logger(categoriesservice.name",{"_index":164,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["logger(productsservice.name",{"_index":259,"title":{},"body":{"injectables/ProductsService.html":{}}}],["manytoone(undefined",{"_index":224,"title":{},"body":{"entities/Products.html":{}}}],["matching",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/profileDTO.html":{},"properties.html":{}}}],["message",{"_index":127,"title":{},"body":{"classes/CategoriesDTO.html":{},"classes/NotNullException.html":{}}}],["metadata",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["methods",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":377,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":410,"title":{},"body":{"index.html":{}}}],["mode",{"_index":400,"title":{},"body":{"index.html":{}}}],["module",{"_index":19,"title":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":21,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":425,"title":{},"body":{"index.html":{}}}],["msg",{"_index":43,"title":{},"body":{"injectables/AppService.html":{}}}],["myśliwiec",{"_index":431,"title":{},"body":{"index.html":{}}}],["name",{"_index":74,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["name/:categoryname",{"_index":113,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["nest",{"_index":391,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":435,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":72,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["newly",{"_index":85,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/ProductsService.html":{}}}],["node.js",{"_index":384,"title":{},"body":{"index.html":{}}}],["notnullexception",{"_index":213,"title":{"classes/NotNullException.html":{}},"body":{"classes/NotNullException.html":{},"coverage.html":{}}}],["npm",{"_index":361,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["null",{"_index":217,"title":{},"body":{"classes/NotNullException.html":{}}}],["null.exception.ts",{"_index":215,"title":{},"body":{"classes/NotNullException.html":{},"coverage.html":{}}}],["nullable",{"_index":178,"title":{},"body":{"entities/Category.html":{}}}],["number",{"_index":88,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/profileDTO.html":{}}}],["ondelete",{"_index":283,"title":{},"body":{"entities/User.html":{}}}],["one",{"_index":269,"title":{},"body":{"entities/Profile.html":{}}}],["onetomany(undefined",{"_index":187,"title":{},"body":{"entities/Category.html":{}}}],["onetoone(undefined",{"_index":267,"title":{},"body":{"entities/Profile.html":{},"entities/User.html":{}}}],["onupdate",{"_index":282,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":412,"title":{},"body":{"index.html":{}}}],["optional",{"_index":76,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["out",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":442,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":342,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":73,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pg",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":423,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":46,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":220,"title":{},"body":{"entities/Products.html":{},"classes/ProductsDTO.html":{}}}],["primarygeneratedcolumn",{"_index":183,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["print",{"_index":41,"title":{},"body":{"injectables/AppService.html":{}}}],["product",{"_index":63,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product'})@apiinternalservererrorresponse({status",{"_index":107,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["product'})@get('all/products",{"_index":108,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["product.category",{"_index":188,"title":{},"body":{"entities/Category.html":{}}}],["product_name",{"_index":229,"title":{},"body":{"entities/Products.html":{}}}],["productdto",{"_index":249,"title":{},"body":{"classes/ProductsDTO.html":{}}}],["production",{"_index":402,"title":{},"body":{"index.html":{}}}],["productname",{"_index":221,"title":{},"body":{"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{}}}],["productrepo",{"_index":148,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["products",{"_index":121,"title":{"entities/Products.html":{}},"body":{"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["productscontroller",{"_index":231,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsdto",{"_index":240,"title":{"classes/ProductsDTO.html":{}},"body":{"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsmodule",{"_index":27,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":251,"title":{"injectables/ProductsService.html":{}},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["profile",{"_index":260,"title":{"entities/Profile.html":{}},"body":{"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["profile.user",{"_index":280,"title":{},"body":{"entities/User.html":{}}}],["profiledto",{"_index":336,"title":{"classes/profileDTO.html":{}},"body":{"coverage.html":{},"classes/profileDTO.html":{}}}],["profileid",{"_index":285,"title":{},"body":{"entities/User.html":{}}}],["profilerepo",{"_index":312,"title":{},"body":{"injectables/UserService.html":{}}}],["profiles",{"_index":314,"title":{},"body":{"injectables/UserService.html":{}}}],["progressive",{"_index":383,"title":{},"body":{"index.html":{}}}],["project",{"_index":414,"title":{},"body":{"index.html":{}}}],["promise",{"_index":84,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":120,"title":{"properties.html":{}},"body":{"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"entities/Products.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"classes/UserDTO.html":{},"classes/profileDTO.html":{},"properties.html":{}}}],["providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/UserModule.html":{}}}],["quantity",{"_index":222,"title":{},"body":{"entities/Products.html":{},"classes/ProductsDTO.html":{}}}],["read",{"_index":424,"title":{},"body":{"index.html":{}}}],["record",{"_index":247,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["referance",{"_index":286,"title":{},"body":{"entities/User.html":{}}}],["reflect",{"_index":365,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":316,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruser",{"_index":293,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registeruser(user",{"_index":297,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["relation",{"_index":189,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"entities/Profile.html":{}}}],["repository",{"_index":147,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["required",{"_index":123,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["reset",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/profileDTO.html":{},"properties.html":{}}}],["return",{"_index":155,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["row",{"_index":96,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["rows",{"_index":156,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["run",{"_index":397,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":299,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["scalable",{"_index":388,"title":{},"body":{"index.html":{}}}],["search",{"_index":160,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/CategoryRepository.html":{},"injectables/ProductsService.html":{}}}],["searchbycategoryname",{"_index":56,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["searchbycategoryname(categoryname",{"_index":111,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["server",{"_index":66,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["service",{"_index":40,"title":{},"body":{"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{}}}],["side",{"_index":389,"title":{},"body":{"index.html":{}}}],["source",{"_index":413,"title":{},"body":{"index.html":{}}}],["specify",{"_index":83,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["sponsors",{"_index":417,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":38,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":45,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.module.ts",{"_index":135,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":137,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/category.entity.ts",{"_index":167,"title":{},"body":{"entities/Category.html":{},"coverage.html":{}}}],["src/categories/category.repository.ts",{"_index":190,"title":{},"body":{"injectables/CategoryRepository.html":{},"coverage.html":{}}}],["src/categories/dto/categories.dto.ts",{"_index":119,"title":{},"body":{"classes/CategoriesDTO.html":{},"coverage.html":{}}}],["src/common/exception",{"_index":199,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/not",{"_index":214,"title":{},"body":{"classes/NotNullException.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/products/dto/products.dto.ts",{"_index":248,"title":{},"body":{"classes/ProductsDTO.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":232,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.entity.ts",{"_index":219,"title":{},"body":{"entities/Products.html":{},"coverage.html":{}}}],["src/products/products.module.ts",{"_index":250,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":252,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/user/dto/user.dto.ts",{"_index":303,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["src/user/profile/profile.dto.ts",{"_index":335,"title":{},"body":{"coverage.html":{},"classes/profileDTO.html":{}}}],["src/user/profile/profile.entity.ts",{"_index":261,"title":{},"body":{"entities/Profile.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":288,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.entity.ts",{"_index":270,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.module.ts",{"_index":307,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":308,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["start",{"_index":398,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":401,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":403,"title":{},"body":{"index.html":{}}}],["started",{"_index":382,"title":{"index.html":{}},"body":{}}],["starter",{"_index":393,"title":{},"body":{"index.html":{}}}],["statements",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":427,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"classes/UserDTO.html":{},"classes/profileDTO.html":{}}}],["string'})@length(2",{"_index":125,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["successfully",{"_index":99,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["successfully'})@apiinternalservererrorresponse({status",{"_index":64,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["successfully'})@apinotfoundresponse({status",{"_index":90,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["support",{"_index":418,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":438,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":341,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":340,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":406,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":409,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":408,"title":{},"body":{"index.html":{}}}],["tests",{"_index":405,"title":{},"body":{"index.html":{}}}],["text",{"_index":228,"title":{},"body":{"entities/Products.html":{},"entities/Profile.html":{}}}],["thanks",{"_index":416,"title":{},"body":{"index.html":{}}}],["touch",{"_index":428,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":175,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"entities/User.html":{}}}],["true})@isstring({message",{"_index":124,"title":{},"body":{"classes/CategoriesDTO.html":{}}}],["try",{"_index":68,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["twitter",{"_index":434,"title":{},"body":{"index.html":{}}}],["type",{"_index":75,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoriesDTO.html":{},"injectables/CategoriesService.html":{},"entities/Category.html":{},"injectables/CategoryRepository.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotNullException.html":{},"entities/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDTO.html":{},"injectables/ProductsService.html":{},"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/profileDTO.html":{}}}],["typeorm",{"_index":375,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":392,"title":{},"body":{"index.html":{}}}],["ui",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["uint8array",{"_index":446,"title":{},"body":{"classes/profileDTO.html":{}}}],["undefined",{"_index":61,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"controllers/UserController.html":{}}}],["unique",{"_index":174,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{}}}],["unit",{"_index":404,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":153,"title":{},"body":{"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":449,"title":{},"body":{"properties.html":{}}}],["update",{"_index":162,"title":{},"body":{"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatecategories",{"_index":57,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["updatecategories(categoriesdto",{"_index":115,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["updatecategory",{"_index":144,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(categoriesdto",{"_index":161,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updated",{"_index":62,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedatecolumn",{"_index":230,"title":{},"body":{"entities/Products.html":{}}}],["updatedon",{"_index":223,"title":{},"body":{"entities/Products.html":{},"classes/ProductsDTO.html":{}}}],["updateproducts",{"_index":238,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateproducts(productsdto",{"_index":246,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateuserinfo",{"_index":294,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateuserinfo(id",{"_index":300,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user",{"_index":264,"title":{"entities/User.html":{}},"body":{"entities/Profile.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.profile",{"_index":268,"title":{},"body":{"entities/Profile.html":{}}}],["usercontroller",{"_index":287,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":298,"title":{"classes/UserDTO.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usermodule",{"_index":28,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userrepo",{"_index":313,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":289,"title":{},"body":{"controllers/UserController.html":{}}}],["userservice",{"_index":306,"title":{"injectables/UserService.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":163,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["varchar",{"_index":173,"title":{},"body":{"entities/Category.html":{},"entities/Products.html":{},"entities/Profile.html":{},"entities/User.html":{}}}],["version",{"_index":447,"title":{},"body":{"properties.html":{}}}],["void",{"_index":212,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":399,"title":{},"body":{"index.html":{}}}],["website",{"_index":432,"title":{},"body":{"index.html":{}}}],["y",{"_index":185,"title":{},"body":{"entities/Category.html":{}}}],["you'd",{"_index":421,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n                    get method\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        data\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoriesModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                App Service class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n\n\n            \n                \n                    print default msg\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n            \n                Description\n            \n            \n                Category controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoryWithProducts\n                            \n                            \n                                    Async\n                                createCategories\n                            \n                            \n                                deleteCategories\n                            \n                            \n                                    Async\n                                getByCategoriesId\n                            \n                            \n                                getCategoryWithProducts\n                            \n                            \n                                    Async\n                                listCategories\n                            \n                            \n                                searchByCategoryName\n                            \n                            \n                                updateCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCategoryWithProducts\n                        \n                    \n                \n            \n            \n                \naddCategoryWithProducts(categoryDTO: CategoriesDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Updated category with product successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Post('/products')\n                \n            \n\n\n\n            \n                \n                    Create new category with product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryDTO\n                                    \n                                                CategoriesDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        New list of category with product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCategories(categoriesDTO: CategoriesDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({status: undefined, description: 'Category added successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Post()\n                \n            \n\n\n\n            \n                \n                    Create new category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    categoriesDTO\n                                    \n                                                CategoriesDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Specify category Name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Newly created Category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategories\n                        \n                    \n                \n            \n            \n                \ndeleteCategories(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Deleted Successfully'})@ApiNotFoundResponse({status: undefined, description: 'Category Not Found'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Delete(':id')\n                \n            \n\n\n\n            \n                \n                    Delete Category By Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        no. of affected row\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByCategoriesId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByCategoriesId(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Category fetched successfully by given id'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'No Category Found For Given Id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n                    Get category details based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        category Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Category Details\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryWithProducts\n                        \n                    \n                \n            \n            \n                \ngetCategoryWithProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Category fetched successfully with product'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'No category Found with product'})@Get('all/products')\n                \n            \n\n\n\n            \n                \n                    Fetch all category with product details\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of category with product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    listCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Category fetched successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'Data Not Found'})@Get()\n                \n            \n\n\n\n            \n                \n                    Fetch list of category\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of Category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByCategoryName\n                        \n                    \n                \n            \n            \n                \nsearchByCategoryName(categoryName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('by-name/:categoryName')\n                \n            \n\n\n\n            \n                \n                    Fetch category by name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of category by name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategories\n                        \n                    \n                \n            \n            \n                \nupdateCategories(categoriesDTO: CategoriesDTO, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Updated Successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Put(':id')\n                \n            \n\n\n\n            \n                \n                    updated Category based on Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    categoriesDTO\n                                    \n                                                CategoriesDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cayegory Id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CategoriesDTO\n\n                    \n                    \n                        Updated category list\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesDTO.html":{"url":"classes/CategoriesDTO.html","title":"class - CategoriesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/categories.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                CategoryDTO class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryName\n                            \n                            \n                                id\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Category name description', required: true})@IsString({message: 'Category name must be string'})@Length(2, 20, {message: 'Category Name should be between 2-20'})\n                        \n                    \n                \n\n            \n                \n                    Column category name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column product\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoryRepository\n\nCategoryRepository\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoryRepository->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            category module class\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryRepository\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Category service fetch the data from database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCategory\n                            \n                            \n                                    Async\n                                addCategoryWithProducts\n                            \n                            \n                                    Async\n                                deleteCategory\n                            \n                            \n                                    Async\n                                fetchAllCategories\n                            \n                            \n                                    Async\n                                getByCategoryId\n                            \n                            \n                                    Async\n                                getCategoryWithProducts\n                            \n                            \n                                    Async\n                                searchByCategoryName\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepo: Repository, productRepo: Repository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCategory(categoriesDTO: CategoriesDTO)\n                \n            \n\n\n\n\n            \n                \n                    Add new category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoriesDTO\n                                    \n                                                CategoriesDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of new added category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addCategoryWithProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCategoryWithProducts(categoriesDTO: CategoriesDTO)\n                \n            \n\n\n\n\n            \n                \n                    Add new Category with product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoriesDTO\n                                    \n                                                CategoriesDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        New added category with product list\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCategory(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Delete Category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Return affected rows\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchAllCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAllCategories()\n                \n            \n\n\n\n\n            \n                \n                    Fetch Category from DB\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByCategoryId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByCategoryId(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Get category from DB by Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of category by id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCategoryWithProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategoryWithProducts()\n                \n            \n\n\n\n\n            \n                \n                    Get all the categories along with the products\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        List of category with product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searchByCategoryName\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchByCategoryName(categoryName: string)\n                \n            \n\n\n\n\n            \n                \n                    Search category by name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Category name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(categoriesDTO: CategoriesDTO, id: number)\n                \n            \n\n\n\n\n            \n                \n                    Update category by Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoriesDTO\n                                    \n                                                CategoriesDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CategoriesDTO\n\n                    \n                    \n                        List of updated category\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CategoriesService.name)\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Category.html":{"url":"entities/Category.html","title":"entity - Category","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Category\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Category entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryName\n                            \n                            \n                                createdOn\n                            \n                            \n                                deletedOn\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'category_name', type: 'varchar', unique: true, length: 10, nullable: false})\n                        \n                    \n                \n\n            \n                \n                    Column categoryName\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n\n            \n                \n                    Column createdOn\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n\n            \n                \n                    Column deletedOn\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Column id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'isActive', type: 'varchar', length: '1', default: 'y'})\n                        \n                    \n                \n\n            \n                \n                    Column is Active\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.category)\n                        \n                    \n                \n\n            \n                \n                    Created relation with product\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryRepository.html":{"url":"injectables/CategoryRepository.html","title":"injectable - CategoryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryRepository\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/category.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom category repository class\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findCategoriesByName\n                            \n                            \n                                getCategoryDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n\n                \n                    \n                            Constructor class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findCategoriesByName\n                        \n                    \n                \n            \n            \n                \nfindCategoriesByName(categoryName: string)\n                \n            \n\n\n\n\n            \n                \n                    Search category by name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Category by name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryDetail\n                        \n                    \n                \n            \n            \n                \ngetCategoryDetail()\n                \n            \n\n\n\n\n            \n                \n                    Get all category details\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        list of category Details\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exception-filter/exception-filter.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                HttpException  filter class\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n\n\n            \n                \n                    Catch block\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotNullException.html":{"url":"classes/NotNullException.html","title":"class - NotNullException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotNullException\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/not-null.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Common not null exception class\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n\n                \n                    \n                            Constructor class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Products.html":{"url":"entities/Products.html","title":"entity - Products","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Products\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Product entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                createdOn\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                price\n                            \n                            \n                                productName\n                            \n                            \n                                quantity\n                            \n                            \n                                updatedOn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, category => category.products, {cascade: true})\n                        \n                    \n                \n\n            \n                \n                    Created relation with category\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n\n            \n                \n                    Column createdOn\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text'})\n                        \n                    \n                \n\n            \n                \n                    Column description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Column id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Column price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'product_name', type: 'varchar', unique: true, length: 10})\n                        \n                    \n                \n\n            \n                \n                    Column product name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n\n            \n                \n                    Column quantity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n\n            \n                \n                    Column updatedOn\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n            \n                Description\n            \n            \n                Product controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProducts\n                            \n                            \n                                    Async\n                                AllProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getbyProductsname\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                updateProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProducts(productsDTO: ProductsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({status: undefined, description: 'Product added successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Post()\n                \n            \n\n\n\n            \n                \n                    Create new product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsDTO\n                                    \n                                                ProductsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    AllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Product fetched successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'Data Not Found'})@UseFilters(HttpExceptionFilter)@Get()\n                \n            \n\n\n\n            \n                \n                    Fetch all Products\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of products\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Deleted Successfully'})@ApiNotFoundResponse({status: undefined, description: 'Product Not Found'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Delete(':id')\n                \n            \n\n\n\n            \n                \n                    Delete product based on Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        No of affected row.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getbyProductsname\n                        \n                    \n                \n            \n            \n                \n                    \n                    getbyProductsname(productName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Product fetched successfully by given Id'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Get('/details/:productName')\n                \n            \n\n\n\n            \n                \n                    Get product by name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of product by name\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Product fetched successfully by given Id'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'No product found for given Id'})@Get(':id')\n                \n            \n\n\n\n            \n                \n                    Get product details based on id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of product based Id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProducts\n                        \n                    \n                \n            \n            \n                \nupdateProducts(productsDTO: ProductsDTO, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Updated Successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Put(':id')\n                \n            \n\n\n\n            \n                \n                    Update product based on Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsDTO\n                                    \n                                                ProductsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProductsDTO\n\n                    \n                    \n                        Updated record based on Id\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsDTO.html":{"url":"classes/ProductsDTO.html","title":"class - ProductsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/products.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                ProductDTO class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdOn\n                            \n                            \n                                description\n                            \n                            \n                                price\n                            \n                            \n                                productName\n                            \n                            \n                                quantity\n                            \n                            \n                                updatedOn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column createdOn\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column price\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column product Name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column quantity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column updatedOn\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Product Module class\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Product service fetch the data from database\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                fetchAllProducts\n                            \n                            \n                                    Async\n                                getByProductId\n                            \n                            \n                                    Async\n                                getProductName\n                            \n                            \n                                updateProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepo: Repository)\n                    \n                \n\n                \n                    \n                            Constructor class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProducts(productsDTO: ProductsDTO)\n                \n            \n\n\n\n\n            \n                \n                    Create new product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsDTO\n                                    \n                                                ProductsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Newly created product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Delete product By id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Deleted record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAllProducts()\n                \n            \n\n\n\n\n            \n                \n                    Fetch product from DB\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of product\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByProductId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByProductId(id: number)\n                \n            \n\n\n\n\n            \n                \n                    Get product from DB by Id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of product by id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductName(name: string)\n                \n            \n\n\n\n\n            \n                \n                    Get the product by name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        product product which is search\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProducts\n                        \n                    \n                \n            \n            \n                \nupdateProducts(productsDTO: ProductsDTO, id: number)\n                \n            \n\n\n\n\n            \n                \n                    Update product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsDTO\n                                    \n                                                ProductsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProductsDTO\n\n                    \n                    \n                        Updated product\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProductsService.name)\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Profile.html":{"url":"entities/Profile.html","title":"entity - Profile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Profile\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Profile entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageContent\n                            \n                            \n                                imageName\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Column id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'image_content'})\n                        \n                    \n                \n\n            \n                \n                    Column imageContent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', name: 'image_name'})\n                        \n                    \n                \n\n            \n                \n                    Column imageName\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, user => user.profile)\n                        \n                    \n                \n\n            \n                \n                    Relation one to one with user\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                User entity class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailId\n                            \n                            \n                                firstName\n                            \n                            \n                                Id\n                            \n                            \n                                lastName\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', name: 'email_id'})\n                        \n                    \n                \n\n            \n                \n                    Column email Id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', name: 'first_name'})\n                        \n                    \n                \n\n            \n                \n                    Column first name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n\n            \n                \n                    Column Id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', name: 'last_name'})\n                        \n                    \n                \n\n            \n                \n                    Column last name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profile => profile.user, {cascade: true, eager: true, onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n\n            \n                \n                    Column profileid to referance\n\n                \n            \n\n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n            \n                Description\n            \n            \n                User controller class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchAllUser\n                            \n                            \n                                fetchUserWithProfile\n                            \n                            \n                                getAllProfiles\n                            \n                            \n                                registerUser\n                            \n                            \n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllUser\n                        \n                    \n                \n            \n            \n                \nfetchAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'User fetched successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'Data Not Found'})@Get()\n                \n            \n\n\n\n            \n                \n                    Fetch user list\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserWithProfile\n                        \n                    \n                \n            \n            \n                \nfetchUserWithProfile()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Fetch user with profile successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'User-Profile data not found'})@Get('/profiles')\n                \n            \n\n\n\n            \n                \n                    To get user with profile\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of user with profile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProfiles\n                        \n                    \n                \n            \n            \n                \ngetAllProfiles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Fetched profile successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@ApiNotFoundResponse({status: undefined, description: 'Profile data not found'})@Get('/all-profile')\n                \n            \n\n\n\n            \n                \n                    Get only profile details\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of profile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(user: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({status: undefined, description: 'User added successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Post()\n                \n            \n\n\n\n            \n                \n                    To save user details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \nupdateUserInfo(id: number, user: UserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({status: undefined, description: 'Updated user-profile successfully'})@ApiInternalServerErrorResponse({status: undefined, description: 'There is an internal server Error, Try again Later'})@Patch(':id')\n                \n            \n\n\n\n            \n                \n                    Update existing user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Affected row\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                UserDTO class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailId\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column emailId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column firstName\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column lastName\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n\n            \n                \n                    Column profile\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            User Module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                User service class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllProfiles\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                getUserWithProfile\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                updateUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Repository, profileRepo: Repository)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProfiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfiles()\n                \n            \n\n\n\n\n            \n                \n                    Fetch only profile details\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        List of profiles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser()\n                \n            \n\n\n\n\n            \n                \n                    Fetch all user\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        List of user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithProfile()\n                \n            \n\n\n\n\n            \n                \n                    Fetch user detail with profile\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        List of user profile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(user: UserDTO)\n                \n            \n\n\n\n\n            \n                \n                    To save User\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Register user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserInfo(id: number, user: UserDTO)\n                \n            \n\n\n\n\n            \n                \n                    update existing user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        Updated list of user with profile\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/categories/category.entity.ts\n            \n            entity\n            Category\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/categories/category.repository.ts\n            \n            injectable\n            CategoryRepository\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/categories/dto/categories.dto.ts\n            \n            class\n            CategoriesDTO\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/common/exception-filter/exception-filter.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/common/not-null.exception.ts\n            \n            class\n            NotNullException\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/dto/products.dto.ts\n            \n            class\n            ProductsDTO\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/products/products.entity.ts\n            \n            entity\n            Products\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/user/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/profile/profile.dto.ts\n            \n            class\n            profileDTO\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/user/profile/profile.entity.ts\n            \n            entity\n            Profile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                85 %\n                (6/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/common : ^9.0.11\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            exceptions : ^0.1.1\n        \n            npm : ^8.19.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n        \n            typeorm : ^0.3.7\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    bootsrap function\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCategoryRepository\n\nCategoryRepository\n\nCategoriesModule -->\n\nCategoryRepository->CategoriesModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/profileDTO.html":{"url":"classes/profileDTO.html","title":"class - profileDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  profileDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/profile/profile.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                ProfileDTO class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                ImageContent\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Column description\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    Column id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ImageContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n\n            \n                \n                    Column imagecontent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Column imageName\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
